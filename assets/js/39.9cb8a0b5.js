(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{633:function(t,r,e){"use strict";e.r(r);var a=e(3),s=Object(a.a)({},(function(){var t=this,r=t.$createElement,e=t._self._c||r;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"简介"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),e("p",[e("strong",[t._v("Floyd判圈算法")]),t._v("("),e("strong",[t._v("Floyd Cycle Detection Algorithm")]),t._v(")，又称"),e("strong",[t._v("龟兔赛跑算法")]),t._v("("),e("strong",[t._v("Tortoise and Hare Algorithm")]),t._v(")。")]),t._v(" "),e("p",[t._v("一般我们用这个算法来判断一个限状态机、迭代函数或者链表上是否存在环。")]),t._v(" "),e("h2",{attrs:{id:"关于算法的描述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#关于算法的描述"}},[t._v("#")]),t._v(" 关于算法的描述")]),t._v(" "),e("p",[t._v("如果有限状态机、迭代函数或者链表上存在环，那么在某个环上以不同速度前进的2个"),e("a",{attrs:{href:"https://zh.wikipedia.org/wiki/%E6%8C%87%E9%92%88_(%E4%BF%A1%E6%81%AF%E5%AD%A6)",title:"指针 (信息学)",target:"_blank",rel:"noopener noreferrer"}},[t._v("指针"),e("OutboundLink")],1),t._v("必定会在某个时刻相遇。同时显然地，如果从同一个起点(即使这个起点不在某个环上)同时开始以不同速度前进的2个指针最终相遇，那么可以判定存在一个环，且可以求出2者相遇处所在的环的起点与长度。")]),t._v(" "),e("p",[t._v("长话短说就是，给出两个指针，在某一个环上以不同的速度前进，那么这两个指针迟早会相遇。")]),t._v(" "),e("h2",{attrs:{id:"相关实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#相关实现"}},[t._v("#")]),t._v(" 相关实现")]),t._v(" "),e("p",[e("RouterLink",{attrs:{to:"/views/Brain/leetcode/141_环形链表/141.环形链表.html"}},[t._v("141.环形链表")])],1)])}),[],!1,null,null,null);r.default=s.exports}}]);